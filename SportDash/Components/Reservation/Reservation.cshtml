@model SportDash.ViewModels.DataViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<section class="bg-elephant div-min-height">
    <div class="container my-4 py-4 bg-elephant">
        <h1 class="text-Geyser pb-3">Reservations</h1>
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">

            <li class="nav-item">
                <a class="nav-link active bg-Geyser text-elephant" data-toggle="tab" href="#todayReservations">Today's Reservations</a>
            </li>
            <li class="nav-item">
                <a class="nav-link bg-Geyser text-elephant" data-toggle="tab" href="#search">Search</a>
            </li>
            @if (User.IsInRole("Playground")&& Model.IsAdmin)
            {
                <li class="nav-item">
                    <a class="nav-link bg-Geyser text-elephant" data-toggle="tab" href="#requests">Requests</a>
                </li>
            }
            @if ((User.IsInRole("Playground") && Model.IsAdmin) || User.IsInRole("NormalUser"))
            {
                <li class="nav-item text-elephant">
                    <a class="nav-link bg-Geyser text-elephant" data-toggle="tab" href="#add">Add</a>
                </li>
            }
        </ul>

        <!-- Tab panes -->
        <div class="tab-content">
            <div id="todayReservations" class="container tab-pane active">
                <br>
                <div class="card-group mt-3 d-flex flex-wrap">
                    @foreach (var res in Model.Reservations)
                    {
                    <div class="col-lg-3 col-md-6 pb-4">
                        <div class="bg-Geyser round-borders mx-1">
                            <div class="card-body">
                                <h5 class="card-title">@res.Name</h5>
                                <h6 class="card-subtitle mb-2 text-muted">@res.Date</h6>
                                <p class="card-text">@res.Playground.FullName</p>
                                <p class="card-text">Hours: @(res.EndTime - res.StartTime)</p>
                                <p class="card-text">From: @res.StartTime</p>
                                <p class="card-text">To:  @res.EndTime</p>
                                <button type="button" onclick="deleteReservation(@res.Id)" class="btn btn-danger col-12">Cancel</button>
                            </div>
                        </div>
                    </div>
                    }
                </div>
            </div>

            <div id="search" class="container tab-pane">
                <br>
                <div class="form-group">
                    <label class="col-form-label text-Geyser mr-3">Date</label>
                    <input type="date" style="width: 25%; display:inline-block" id="search-date" name="bday" class="form-control">
                    <button type="button" id="show-reservation" class="btn btn-info">Show</button>
                </div>
                <div class="card-group mt-3" id="returned-data">

                </div>
            </div>

            <div id="requests" class="container tab-pane fade">
                <br>
                <div class="card-group mt-3">
                    @foreach (var res in Model.Requests)
                    {
                        <div class="card" style="width: 18rem;">
                            <div class="card-body">
                                <h5 class="card-title">@res.Name</h5>
                                <h6 class="card-subtitle mb-2 text-muted">@res.Date</h6>
                                <p class="card-text">@res.Playground.FullName</p>
                                <p class="card-text">Hours: @(res.EndTime - res.StartTime)</p>
                                <p class="card-text">From: @res.StartTime</p>
                                <p class="card-text">To:  @res.EndTime</p>
                                <div class="card-body">
                                    <button type="button" onclick="acceptReservation(@res.Id)" class="btn btn-success">Accept</button>
                                    <button type="button" onclick="deleteReservation(@res.Id)" class="btn btn-danger">Cancel</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div id="add" class="container tab-pane fade">
                <br>
                <div style="text-align:left;width: 40%;margin: 50px auto;padding: 10px;border: 1px solid #ddd;border-radius: 10px;">
                    @if (User.IsInRole("Playground") && Model.IsAdmin)
                    {
                        <label class="text-Geyser">Username</label>
                        <input type="text" id="reservation-user" name="EventUsername" class="form-control" />
                    }
                    <label class="text-Geyser">Date</label>
                    <input type="date" id="reservation-date" name="EventDate" class="form-control" />
                    <label class="text-Geyser">Start Time</label>
                    <input type="time" id="start-at" name="EventFrom" class="form-control" />
                    <label class="text-Geyser">End Time</label>
                    <input type="time" id="end-at" name="EventTo" class="form-control" />
                    <button id="new-reservation" style="margin: 20px 0;width: 100%;" class="btn btn-info bg-Mountain">Add</button>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="modal" tabindex="-1" role="dialog" data-target="#myModal" id="myModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Error Reservation Time</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>There is another reservation at the same time, Please choose another time.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" data-dismiss="modal">Ok</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" on-content-loaded="true">
    function deleteReservation (ReservationId){
        $.ajax({
            url: '/@Model.ControllerName/DeleteReservation?id=' + ReservationId,
            type: 'POST',
            datatype: 'text',
            success: function () {
                location.reload(true);
            }
        });
    }

    function acceptReservation(ReservationId) {
        $.ajax({
            url: '/@Model.ControllerName/AcceptReservation?id=' + ReservationId,
            type: 'POST',
            dataType: 'text',
            success: function () {
                location.reload(true);
            }
        });
    }

    let newReservation = document.getElementById('new-reservation');
    newReservation.onclick = function add() {
        let newobj = {
            Name: document.getElementById('reservation-user')?.value,
            Date: document.getElementById('reservation-date').value,
            StartTime: document.getElementById('start-at').value,
            EndTime: document.getElementById('end-at').value,
            PlaygroundId: "@Model.Entity.Id"
        };
        console.log("new object: " + newobj);
        $.ajax({
            url: '/@Model.ControllerName/AddReservation',
            type: 'POST',
            datatype: 'text',
            data: { reservation: newobj },
            success: function () {
                location.reload(true);
            },
            error: function (e) {
                $("#myModal").modal("show");
            }
        });
    }

    $('#show-reservation').click(function () {
        var date = $('#search-date').val();
        $.ajax({
            url: '/@Model.ControllerName/SearchByDate',
            type: 'POST',
            dataType: 'json',
            data: {
                date: date,
                PlaygroundId: "@Model.Entity.Id"
            },
            success: function (res) {
                var target = $('#returned-data');
                target.empty();
                if (res.value.length == 0) {
                    target.append('<div class="container"><h5 style="color: #fff;">There are no reservations at the moment...</h5></div>');
                }
                else {
                    for (var i = 0; i < res.value.length; i++) {
                        var reserve = res.value[i];
                        var newdate = reserve.date.substring(0, 10);
                        target.append('<div class="card" style="width: 18rem;"><div class="card-body"><h5 class="card-title">' + reserve.name + '</h5 ><h6 class="card-subtitle mb-2 text-muted">' + newdate + '</h6><p class="card-text">From: ' + reserve.startTime + '</p><p class="card-text">To:  ' + reserve.endTime + '</p></div></div>');
                    }
                }
            },
        })
    });
</script>
