@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model SportDash.ViewModels.DataViewModel
@using SportDash.ViewModels;
@using SportDash.Models;


<div class="site-blocks-cover3 overlay" style="background-image: url(/images/site/gym2.jpg);" data-aos="fade" data-stellar-background-ratio="0.5" id="profile-image-container">
    <div class="container">

        <div class="pt-5 mb-5">
            <div class="row justify-content-center text-center mb-5 pt-5">
                <div class="col-md-6" data-aos="fade">
                    <h1 class="text-light">Membership Plans</h1>
                </div>
            </div>
        </div>

        <div class="row align-items-center text-center">
            <div class="col-12">
                <div class="row hosting">
                    @{
                        async void RenderGymPriceComponent(Subscribtion_type TargetedSubscribtionType)
                        {

                            bool Rendered = false;

                            foreach (GymPrices gymPrice in Model.GymPricesList)
                            {
                                if (gymPrice.Subscribtion_Type == TargetedSubscribtionType)
                                {
                                    Model.GymPrice = gymPrice;
                                    @await Component.InvokeAsync("GymPrice", Model);
                                    Rendered = true;
                                    break;
                                }
                            }
                            if (!Rendered)
                            {
                                GymPrices gymPrice = new GymPrices()
                                {
                                    Subscribtion_Type = TargetedSubscribtionType,
                                    GymId = Model.Entity.Id
                                };
                                Model.GymPrice = gymPrice;
                                @await Component.InvokeAsync("GymPrice", Model);
                            }
                        }

                        RenderGymPriceComponent(Subscribtion_type.Day);
                        RenderGymPriceComponent(Subscribtion_type.Week);
                        RenderGymPriceComponent(Subscribtion_type.Month);
                        RenderGymPriceComponent(Subscribtion_type.Year);
                    }
                </div>
            </div>
        </div>
    </div>
</div>

