@model SportDash.ViewModels.MessagingViewModel
@inject UserManager<ApplicationUser> userManager
@{
    ViewData["Title"] = "Recent Messages";
}

<div class="container app">
    <div class="row app-one">
        <div class="col-sm-4 side">
            <div class="side-one">
                <div class="row heading">
                    <div class="col-sm-3 col-xs-3 heading-avatar">
                        <h4>Chats</h4>
                    </div>
                </div>

                <div class="row sideBar" id="all-msgs">
                    @if (Model.RecievedMessages.Count() == 0)
                    {
                        <div style="padding: 10px;">
                            <h4 class="text-center" style="color: #93918f">No Recent Messages</h4>
                        </div>
                    }
                    else
                    {
                        @foreach (var message in Model.RecievedMessages)
                        {
                            <div class="row sideBar-body full-width" id="_@(message.FirstOrDefault().SenderId)" onclick="miniChat('@(message.FirstOrDefault().SenderId)')">
                                <div class="col-lg-2 col-sm-3 col-xs-3 sideBar-avatar">
                                    <div class="avatar-icon">                                 
                                        <img src="~/images/site/user-icon.jpg" />
                                    </div>
                                </div>
                                <div class="col-lg-10 col-sm-9 col-xs-9 sideBar-main">
                                    <div class="row">
                                        <div class="col-sm-8 col-xs-8 ellipsis">
                                            <span class="name-meta">
                                                <a>@message.Key</a>
                                            </span>
                                            <p>@message.FirstOrDefault().Body</p>
                                        </div>
                                        <div class="col-sm-4 col-xs-4 pull-right sideBar-time">
                                            <span class="time-meta pull-right">
                                                @if (message.FirstOrDefault().MessageDate.Day == DateTime.Now.Day)
                                                {
                                                    <small> <i>@message.FirstOrDefault().MessageDate.ToShortTimeString()</i></small>
                                                }
                                                else
                                                {
                                                    <small> <i>@message.FirstOrDefault().MessageDate.ToShortDateString()</i></small>
                                                }

                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <div class="col-sm-8 conversation" id="mini-chat">
            <div class="text-center py-5">
                <h4 class="text-secondary">Click on any message to start conversation</h4>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        let sender = "";
        function sendData(senderId) {
            sender = senderId;
        }
        async function replay() {
            const replayMsg = document.querySelector("#replay");
            if (replayMsg.value !== "") {
                if (connection.connectionState == 0) {
                    await connection.start();
                }
                connection.invoke("SendMsg", replayMsg.value, sender);
                replayMsg.value = "";
            }
        }
        function loadAll(event) {
            event.target.style.display = "none";
            $.ajax({
                url: "/Messages/GetAll",
                type: 'POST',
                success: function (data) {
                    allmsgs.innerHTML = data;
                }
            })
        }
        let idOfSender = '';
        function miniChat(senderId) {
            idOfSender = senderId;
            //const loader = document.querySelector("#loader");
            //loader.style.left = window.innerWidth / 2 + "px";
            //loader.style.top = window.innerHeight / 2 + "px";
            //loader.style.display = 'block';
            $.ajax({
                url: '/Messages/MiniChat?senderId=' + senderId,
                method: 'GET',
                success: function (data) {
                    const chatContainer = document.querySelector('#mini-chat');
                    //loader.style.display = 'none';
                    chatContainer.innerHTML = data;
                }
            })
        }

        function send() {
            const msg = document.querySelector("#msg");
            var msgIn = msg.value.replace(/<\/?[^>]+(>|$)/g, "");
            if (msgIn != "") {
                if (connection.connectionState == 0) {
                    connection.start();
                }
                else {
                    connection.invoke("SendMsg", msgIn, idOfSender);
                    msg.value = "";
                }
            }
            msg.focus();
        }
        function sendKey(event) {
            if (event.key == "Enter") {
                event.preventDefault();
                send();
            }
        }

        connection.on("recMsg", function (res, senderId, username, date) {
            const msgContainer = $("#msgs-container");
            if (senderId == idOfSender) {
                msgContainer.append(`
                    <div class="row message-body" id="scroll-element">
                        <div class="col-sm-12 message-main-receiver">
                            <div class="receiver">
                                <div class="message-text">${res}</div>
                                <span class="message-time pull-right">${date}</span>
                            </div>
                        </div>
                    </div>`);
                let newMsg = document.getElementById('scroll-element');
                newMsg.scrollIntoView();
                newMsg.removeAttribute("id");
            }
            else {
                msgContainer.append(`
                    <div class="row message-body" id="scroll-element">
                        <div class="col-sm-12 message-main-sender">
                            <div class="sender">
                                <div class="message-text">${res}</div>
                                <span class="message-time pull-right">${date}</span>
                            </div>
                        </div>
                    </div>`);
                let newMsg = document.getElementById('scroll-element');
                newMsg.scrollIntoView(true);
                newMsg.removeAttribute("id");
            }
            const htmlObj = `
                <div id='_${senderId}'
                        <div class="row sideBar-body full-width" id="_${senderId}" onclick="miniChat('${senderId}')">
                            <div class="col-lg-2 col-sm-3 col-xs-3 sideBar-avatar">
                                <div class="avatar-icon">
                                    <img src="/images/site/user-icon.jpg" />
                                </div>
                            </div>
                            <div class="col-lg-10 col-sm-9 col-xs-9 sideBar-main">
                                <div class="row">
                                    <div class="col-sm-8 col-xs-8 ellipsis">
                                        <span class="name-meta">
                                            <a>${username}</a>
                                        </span>
                                        <p>${res}</p>
                                    </div>
                                    <div class="col-sm-4 col-xs-4 pull-right sideBar-time">
                                        <span class="time-meta pull-right">
                                           <small> <i>${date}</i></small>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>`;
            if (username != '@(userManager.Users.FirstOrDefault(u => u.UserName == User.Identity.Name).FullName)') {
                const sentMsgs = document.querySelectorAll('#_' + senderId);
                sentMsgs.forEach(ele => ele.remove());
                $('#all-msgs').prepend(htmlObj);
            }
        });
        //window.oncontextmenu = function () {
        //    return false;
        //}
        window.onkeydown = function (e) {
            if (e.key == 'F12') {
                return false
            }
            return true;
        }
        function toggleDate(event) {
            var dateEle = event.target.parentElement.children[0];
            if (dateEle.style.display === 'none') {
                dateEle.style.display = 'block';
            }
            else {
                dateEle.style.display = 'none';
            }
        }
    </script>
}