@model DataViewModel
@using SportDash.Components.Question;
@inject SportDash.Repository.IImageRepository _imageRepository


@{
    QuestionVComponent questionVComponent = new QuestionVComponent(_imageRepository);
}

<section class="bg-white">
    <div class="site-section">
        <div class="container">
            <div class="row justify-content-center text-center mb-4">
                <div class="col-md-6" data-aos="fade">
                    <h1>Post a Question</h1>
                    <p>Select a category and ask your question</p>
                </div>
            </div>

            <div class="card mb-4 custom-shadow">
                <div class="card-body mt-3 mb-1">
                    <div class="row justify-content-between px-2">
                        <div class="col-lg-1 col-md-2 mb-3">
                            <img class="profile-image" style="width:64px;height:64px;" src="@questionVComponent.GetImagePath(Model.CurrentUser.Id)" asp-append-version="true">
                        </div>

                        <div class="col-lg-11 px-0 col-md-10 text-left">
                            <div class="form-group col-12">
                                @Html.DropDownList("Question_Category",
                                        new SelectList(Enum.GetValues(typeof(QuestionAbout))),
                                        "Select Category",
                                        new { @class = "form-control" })
                            </div>
                            <div class="form-group col-12">
                                <textarea class="form-control" rows="4" id="Question_Body" placeholder="What's in your mind ..."></textarea>
                                <span id="Question_Validation" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-end px-2">
                        <a id="Ask" class="btn btn-primary text-light">Submit</a>
                        <a id="Ask" class="btn btn-dark ml-1" asp-controller="Question" asp-action="Category">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="modal fade" tabindex="-1" role="dialog" id="Question_Modal" aria-modal="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="Question_Modal_header_Message" class="modal-title">Confirmation Message</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="Question_Modal_Body"></p>
            </div>
            <div class="modal-footer">
                <a id="Ok" type="button" class="btn btn-primary" asp-controller="Question" asp-action="myQuestions">OK</a>
            </div>
        </div>
    </div>
</div>


<script>

    let Ask = document.getElementById("Ask");
    Ask.addEventListener("click", () => {
        let postLength = document.getElementById("Question_Body").value.trim().length;
        let RequiredLength = 20;
        if (postLength > RequiredLength) {
            document.getElementById("Question_Validation").innerText = "";
            var today = new Date();
            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();
            var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
            var dateTime = date + ' ' + time;
            let selectedIndex = document.getElementById("Question_Category").selectedIndex;
            if (selectedIndex === 0) {
                selectedIndex = 4;
            }
            $.ajax({
            method: "POST",
            url:'/@Model.ControllerName/Ask',
            data: {
                "Body": `${document.getElementById("Question_Body").value}`,
                "CreationTime": `${dateTime}`,
                "LastUpdateTime": `${dateTime}`,
                "UserId": `@Model.CurrentUser.Id`,
                "Category": `${selectedIndex-1}`
            },
            success: () => {
                raiseModal("Successful Posting", "The question is successfully posted");
            },
            error: () => {
                raiseModal("Error", "The question can't be posted");
            }
        })
        }
        else {
            document.getElementById("Question_Validation").innerText = `*At least ${RequiredLength - postLength} more Characters are needed for posting`
        }

    });

    function raiseModal(modalHeader, modalBody) {
        $("#Question_Modal_header_Message").text(modalHeader);
        $("#Question_Modal_Body").text(modalBody);
        $("#Question_Modal").modal();
    }
</script>
